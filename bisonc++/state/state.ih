#include "state.h"

#include <string>
#include <ostream>
#include <algorithm>
#include <functional>
#include <iterator>
#include <iomanip>

#include <bobcat/mstream>
#include <bobcat/arg>
#include <bobcat/fnwrap>
#include <bobcat/indent>

#include "../rules/rules.h"
#include "../nonterminal/nonterminal.h"
#include "../production/production.h"
#include "../item/item.h"
#include "../lookaheadset/lookaheadset.h"
#include "../stateitem/stateitem.h"

using namespace std;
using namespace FBB;

inline void State::staticCheckConflicts(State *state)
{
    state->checkConflicts();
}

inline void State::staticSummarizeActions(State *state)
{
    state->summarizeActions();
}

inline void State::staticPropagateLA(State *state)
{
    state->propagateLA();
}

inline void State::staticAddKernelItem(Item const &item, State &state)
{
    state.addKernelItem(StateItem(item));
}

inline std::ostream &State::skipInsertion(std::ostream &out) const
{
    return out;
}

