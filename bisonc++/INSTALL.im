    // The name of the program and the support directories as installed by
    // the 'build install' command. Normally there is no reason for changing
    // this #define
#define PROGRAM             "bisonc++"

    // The following /bin/cp option is used to keep, rather than follow
    // symbolic references. If your installation doesn't support these flags,
    // then change them into available ones.
    //   -P, --no-dereference
    //            never follow symbolic links in SOURCE
    //   --preserve[=ATTR_LIST]
    //          preserve   the   specified   attributes   (default:  
    //          mode,ownership,timestamps), if possible  additional  
    //          attributes:  context, links, all
    //   -d     same as --no-dereference --preserve=links
#define CPOPTS  "-d"


    // The CXX, CXXFLAGS, and LDFLAGS #defines are overruled by identically
    // named environment variables:

    // the compiler to use. 
#define CXX                 "g++"

    // the compiler options to use.
#define CXXFLAGS            "--std=c++14 -Wall -O2 -fdiagnostics-color=never"

#define LDFLAGS             ""
    // flags passed to the linker


    // the directory where the skeleton files are installed
    // Recompile options/data.cc if the skeleton location changes
    // Before compiling bisonc++ the environment variable SKEL can be defined
    // to overruled the location specified here
#define SKELDIR    "/usr/share/bisonc++"


// =========================================================================
// Deactivate (e.g., use //#define ...) the following #defines to prevent
// installation of the indicated component by 'build install'
// 'build install base' can be used to specify a base directory below which
// all components are installed (e.g., the bisonc++ program is then installed
// in 'base + BINARY')
// =========================================================================

    // the full path of the final program
#define BINARY     "/usr/bin"

    // define SKEL if the skeleton files must be installed at SKELDIR
#define SKEL

    // the directory whre the manual page is stored
#define MAN     "/usr/share/man/man1"

    // the directory whre the manual page is stored
#define MANUAL   "/usr/share/doc/"${PROGRAM}"-doc/manual"

    // the directory where the standard documentation is stored 
#define STD     "/usr/share/doc/"${PROGRAM}

    // the directory where the extra documentation is stored 
#define EXTRA   "/usr/share/doc/"${PROGRAM}"-doc"






