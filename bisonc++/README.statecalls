Starting at bisonc++.cc:

    itemSets.define(rules.startProduction());

        Starts at the starting state. 
        Defines its initial LA ($), then computes its closure.

    State::closure() defines the itemset and their lookaheads.

        Calls, for each item in the state's kernel:

    State::inspectProduction(itemIt->production(), itemIt->dot(), 
                             itemIt->lookaheadSet());

        The current production and dot determine whether any non-kernel items
        are added; Item::lookaheadSet() returns {LA} for the current
        item. When an item is constructed, its {LA} can be determined,
        although the possibility exists that an item's {LA} is expanded after
        it has been constructed.

        So, if the current item is A -> b . B y  [a], then {LA} becomes
        FIRST(y, [a]), which is equal to [a] if y is empty.

        inspectProduction() calls findFirst() to determine an item's {LA}.
    