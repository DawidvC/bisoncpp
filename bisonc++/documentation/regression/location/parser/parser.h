#ifndef Parser_h_included
#define Parser_h_included

// this file was originally generated by bisonc++, then modified and renamed
// to parser.h so that it was kept when the `run' script was executed. When
// executing `run', compare the contents of this file and those of Parser.h,
// to see what local modifications were made: only the Parser constructor was
// added (and this comment, of course)

// for error()'s inline implementation
#include <iostream>

// $insert scanner.h
#include "../scanner/scanner.h"

// $insert baseclass
#include "Parserbase.h"
#undef Parser

class Parser: public ParserBase
{
    // $insert scannerobject
    Scanner d_scanner;
        
    public:
        Parser()
        :
            d_scanner(&d_loc, &d_val)
        {}
        
        int parse();

    private:
        void error(char const *msg)
        {
            std::cerr << msg << std::endl;
        }

        // $insert lex
        int lex()
        {
            return d_scanner.yylex();
        }

        void print()    // d_token, d_loc
        {}


    // support functions for parse():
        void executeAction(int ruleNr);
        void errorRecovery();
        int lookup();
        void nextToken();
};


#endif
