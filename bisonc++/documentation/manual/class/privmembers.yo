    The following private members can be used by members of parser classes
generated by b(). When prefixed by bf(Base::) they are actually protected
members inherited from the parser's base class. 
    itemization(
    it() bf(Base::ParserBase()):nl()
        The default base-class constructor. Can be ignored in practical
            situations.
    it() bf(void Base::ABORT() const throw(Return)):nl()
       This member can be called from any member function (called from any of
        the parser's action blocks) to indicate a failure while parsing thus
        terminating the parsing function with an error value 1. Note that this
        offers a marked extension and improvement of the macro bf(YYABORT)
        defined by bf(bison++) in that bf(YYABORT) could not be called from
        outside of the parsing member function.
    it() bf(void Base::ACCEPT() const throw(Return)):nl()
       This member can be called from any member function (called from any of
        the parser's action blocks) to indicate successful parsing and thus
        terminating the parsing function. Note that this offers a marked
        extension and improvement of the macro bf(YYACCEPT) defined by
        bf(bison++) in that bf(YYACCEPT) could not be called from outside of
        the parsing member function.
    it() bf(void Base::clearin+nop()()):nl()
       This member replaces bf(bison)(++)'s macro bf(yyclearin) and causes
        bf(bisonc++) to request another token from its tt(lex+nop()()) member,
        even if the current token has not yet been processed.
    it() bf(bool Base::debug() const):nl()
       This member returns the current value of the debug variable. See
        bf(setDebug()) below.
    it() bf(void Base::ERROR+nop()() const throw(ErrorRecovery)):nl()
       This member can be called from any member function (called from any of
        the parser's action blocks) to generate an error, and thus initiate
        the parser's error recovery code. Note that this offers a marked
        extension and improvement of the macro bf(YYERROR) defined by
        bf(bison++) in that bf(YYERROR) could not be called from outside of
        the parsing member function.
    it() bf(void error(char const *msg)):nl()
       This member may be redefined in the parser class. Its default (inline)
        implementation is to write a simple message to the standard error
        stream. It is called when a syntactical error is encountered.
    it() bf(void errorRecovery+nop()()):nl()
       Used internally by the parsing function. Not to be called otherwise.
    it() bf(void executeAction+nop()()):nl()
       Used internally by the parsing function. Not to be called otherwise.
    it() bf(int lex()):nl() This member is called by the bf(parse()) member to
        obtain the next lexical token. By default it is not implemented, but
        the tt(%scanner) directive (see ref(SCANNER) may be used to
        pre-implement a standard interface to a lexical analyzer. See section
        ref(LEX) for further details about the bf(lex()) private member
        function.
    it() bf(int lookup+nop()()):nl()
       Used internally by the parsing function. Not to be called otherwise.
    it() bf(void nextToken+nop()()):nl()
       Used internally by the parsing function. Not to be called otherwise.
    it() bf(void Base::pop+nop()()):nl()
       Used internally by the parsing function. Not to be called otherwise.
    it() bf(void print())):nl()
       This member can be redefined in the parser class to print information
        about the parser's state. It is called by the parser immediately after
        retrieving a token from bf(lex()). As it is a member function it has
        access to all the parser's members, in particular bf(d_token), the
        current token value and bf(d_loc), the current token location
        information (if bf(%lsp-needed, %ltype) or bf(%locationstruct) has
        been specified).
    it() bf(void Base::push+nop()()):nl()
       Used internally by the parsing function. Not to be called otherwise.
    it() bf(void Base::reduce+nop()()):nl()
       Used internally by the parsing function. Not to be called otherwise.
    it() bf(void Base::setDebug(bool mode)):nl()
       This member can be used to activate or deactivate the debug-code
        compiled into the parsing function. It is available, but has no
        effect, if no debug code has been compiled into the parsing
        function. When debugging code has been compiled into the parsing
        function, it is active by default, but it may be suppressed by calling
        bf(setDebug(false)).
    it() bf(void Base::top+nop()()):nl()
       Used internally by the parsing function. Not to be called otherwise.
    )
