int \@::lookup(bool recovery)
{
    // if the final transition is negative, then we should reduce by the rule
    // given by its positive value. Note that the `recovery' parameter is only
    // used with the --debug option

$insert 0 threading

    if (elementPtr == lastElementPtr)   // reached the last element
    {
        if (elementPtr->d_action < 0)   // default reduction
        {
$insert 12 debug "lookup(" << d_state__ << ", " << symbol__(d_token__) +
$insert 12 debug "): default reduction by rule " << -elementPtr->d_action
            return elementPtr->d_action;                
        }
$insert 8 debug "lookup(" << d_state__ << ", " << symbol__(d_token__) << "): Not " +
$insert 8 debug "found. " << (recovery ? "Continue" : "Start") << " error recovery." 

        // No default reduction, so token not found, so error.
        throw UNEXPECTED_TOKEN__;
    }

    // not at the last element: inspect the nature of the action
    // (< 0: reduce, 0: ACCEPT, > 0: shift)

    int action = elementPtr->d_action;

$insert 0 debuglookup

    return action;
}
