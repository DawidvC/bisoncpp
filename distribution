#!/bin/sh
PROJECT=bisoncpp

# When recreating to repair lintian/linda messages, define REPAIR
# and rerun `distribution'
# REPAIR=YES

[ -d ${PROJECT} ] || exit 1             # the $PROJECT dir must exist

cvsremove

if [ ! -e usage ] 
then
    echo g++ -o usage usage.cc bisonc++/usage.cc
    g++ -o usage usage.cc bisonc++/usage.cc
fi

cd  ${PROJECT}
[ -s VERSION ] || exit 1                # VERSION must exist in $PROJECT



if [ "$REPAIR" == "" ] 
then
    mkdir -p flex
    cp /usr/include/FlexLexer.h flex
    
    make/distclean
    
    ../usage > documentation/manual/invoking/usage
    
    cd scanner 
    [ -e yylex.cc ] || req flex lexer
    cd ..
    
    make/man
    make/manual
fi


export BISONCPP=minimal 
. VERSION                               # load it
DISTRIBUTION=${PROJECT}-${VERSION}      # define the distribution's dir name

cd ..                                   # change the CVS dir name to the
mv ${PROJECT} ${DISTRIBUTION}           # distribution's dir name


if [ "$REPAIR" == "" ] 
then
                                        # create the .orig source tar
    tar czvf ${PROJECT}_${VERSION}.orig.tar.gz --exclude=debian ${DISTRIBUTION}
fi

cd ${DISTRIBUTION}                      # now build the distribution
dpkg-buildpackage -mf.b.brokken@rug.nl  -rfakeroot 2>&1 | tee /tmp/$PROJECT 

cd ..                                   # change the distribution's dir name
mv ${DISTRIBUTION} ${PROJECT}           # back to the cvs's dir name

cvsrestore

echo LINTIAN ...
lintian -i ${PROJECT}_${VERSION}_*.changes 

echo LINDA ...
linda   -i ${PROJECT}_${VERSION}_*.changes
